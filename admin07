<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/>
  <title>Admin ‚Äì User Verification</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      margin: 0;
      background-color: #f1f3f5;
      color: #f1f5f9;
      font-family: 'Inter', sans-serif;
      padding: 1.5rem;
    }

    h2 {
      text-align: center;
      color: #3b82f6;
      margin-bottom: 1.8rem;
      font-size: 1.4rem;
    }

    .user-list {
      max-width: 800px;
      margin: 0 auto;
    }

    .user-card {
      background-color: #1e293b;
      border-radius: 16px;
      padding: 1.2rem;
      margin-bottom: 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.35);
      transition: transform 0.2s ease;
    }

    .user-card:hover {
      transform: translateY(-2px);
    }

    .user-info {
      display: flex;
      flex-direction: column;
      font-size: 0.95rem;
    }

    .status {
      font-weight: 600;
      margin-top: 0.4rem;
    }

    .verified {
      color: #22c55e;
    }

    .not-verified {
      color: #f97316;
    }

    .btn {
      padding: 8px 16px;
      font-size: 0.85rem;
      font-weight: 600;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.2s ease;
    }

    .verify-btn {
      background-color: #3b82f6;
      color: white;
    }

    .verify-btn:hover {
      background-color: #2563eb;
    }

    .unverify-btn {
      background-color: #f1f5f9;
      color: #0f172a;
    }

    .unverify-btn:hover {
      background-color: #e2e8f0;
    }

    @media (max-width: 600px) {
      .user-card {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }

      .btn {
        width: 100%;
      }
    }
  </style>
</head>
<body>
<!-- ========================= -->
<!-- ‚ú¶ Welcome Box with Icon ‚ú¶ -->
<!-- ========================= -->

<div class="container welcome-box">
  <div class="welcome-content">
    <svg class="welcome-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="#3b82f6">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
        d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
    </svg>
    <div class="welcome-text">
      <h2>Welcome Admin</h2>
    </div>
  </div>
</div>

<style>
  .container {
    flex: 1;
    background-color: #0f172a;
    padding: 24px;
    border-radius: 20px;
    border: 1px solid #1e293b;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
    color: #e2e8f0;
    width: 100%;
    max-width: 1000px;
    height: 120px;
    margin-bottom: 30px;
    box-sizing: border-box;
    display: flex;
    align-items: center;
  }

  .welcome-content {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .welcome-icon {
    width: 40px;
    height: 40px;
    stroke-width: 2.2;
    flex-shrink: 0;
  }

  .welcome-text h2 {
    margin: 0;
    font-size: 18px;
    color: #3b82f6;
  }

  @media (max-width: 600px) {
    .container {
      padding: 16px;
      height: auto;
    }

    .welcome-content {
      flex-direction: column;
      align-items: flex-start;
      gap: 10px;
    }

    .welcome-icon {
      width: 36px;
      height: 36px;
    }

    .welcome-text h2 {
      font-size: 16px;
    }
  }
</style>
  <h2>Admin ‚Äì Verify Users</h2>
  <div id="user-list" class="user-list">Loading users...</div>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.10.0/firebase-app.js";
    import { getFirestore, collection, getDocs, updateDoc, doc } from "https://www.gstatic.com/firebasejs/10.10.0/firebase-firestore.js";

    const firebaseConfig = {
  apiKey: "AIzaSyD1nlcsxR7SkaB4hPVLcehdjV1bQPUXV5I",
  authDomain: "stoctmartket-en.firebaseapp.com", // Assuming this typo is intentional and matches your actual Firebase project ID
  projectId: "stoctmartket-en",
  storageBucket: "stoctmartket-en.appspot.com", // FIXED: Correct Firebase storage bucket domain
  messagingSenderId: "925990118609",
  appId: "1:925990118609:web:77bdfd4c16bc584070d1f0"
};

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    async function loadUsers() {
      const userList = document.getElementById("user-list");
      userList.innerHTML = "Loading users...";

      try {
        const usersRef = collection(db, "users");
        const snapshot = await getDocs(usersRef);
        userList.innerHTML = "";

        if (snapshot.empty) {
          userList.innerHTML = "<p style='text-align:center; color:#94a3b8;'>üö´ No users found.</p>";
          return;
        }

        snapshot.forEach((docSnap) => {
          const user = docSnap.data();
          const userId = docSnap.id;

          const card = document.createElement("div");
          card.className = "user-card";

          const info = document.createElement("div");
          info.className = "user-info";

          const email = user.email || "No email";
          const isVerified = user.isVerified === true;

          info.innerHTML = `
            <span><strong>${email}</strong></span>
            <span class="status ${isVerified ? "verified" : "not-verified"}">
              ${isVerified ? "Verified" : "Not Verified"}
            </span>
          `;

          const button = document.createElement("button");
          button.className = isVerified ? "btn unverify-btn" : "btn verify-btn";
          button.textContent = isVerified ? "Unverify" : "Verify";

          button.onclick = async () => {
            try {
              await updateDoc(doc(db, "users", userId), {
                isVerified: !isVerified
              });
              loadUsers();
            } catch (error) {
              alert("Error updating user: " + error.message);
            }
          };

          card.appendChild(info);
          card.appendChild(button);
          userList.appendChild(card);
        });

      } catch (error) {
        userList.innerHTML = `<p style="color:red; text-align:center;">‚ùå Error: ${error.message}</p>`;
      }
    }

    loadUsers();
  </script>
</body>
</html>