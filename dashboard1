<!DOCTYPE html>
<html lang="en">
<head>
<!-- Smartsupp Live Chat script -->
<script type="text/javascript">
var _smartsupp = _smartsupp || {};
_smartsupp.key = '4202b683f9b10c1842c5f4abd61f0096c7bc0dee';
window.smartsupp||(function(d) {
	var s,c,o=smartsupp=function(){ o._.push(arguments)};o._=[];
	s=d.getElementsByTagName('script')[0];c=d.createElement('script');
	c.type='text/javascript';c.charset='utf-8';c.async=true;
	c.src='https://www.smartsuppchat.com/loader.js?';s.parentNode.insertBefore(c,s);
})(document);
</script>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Dashboard</title>

  <!-- Phosphor Icons -->
  <link rel="stylesheet" href="https://unpkg.com/phosphor-icons@1.4.2/src/css/phosphor.css">
  <script src="https://unpkg.com/@phosphor-icons/web"></script>

  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <!-- Firebase SDKs -->
  <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-auth-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-firestore-compat.js"></script>

 <style>
  body {
    background-color: #ffffff;
    color: #000;
    font-family: 'Segoe UI', sans-serif;
    margin: 0;
    padding: 24px;
    overflow-x: hidden;
  }

  header {
  height: 70px;
  width: 100%;
  background: #f8f9fa;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  position: fixed;
  top: 0;
  left: 0;
  z-index: 999;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 16px;
  box-sizing: border-box;
  font-size: 13px;
  transition: transform 0.3s ease;
}

#page-wrapper {
  transition: transform 0.3s ease;
  position: relative;
  top: 70px;
  height: calc(100vh - 70px);
  overflow-y: auto;
  padding: 16px;
  box-sizing: border-box;
}

.header-left {
  display: flex;
  align-items: center;
  gap: 6px;
}

.header-center {
  position: absolute;
  left: 55%;
  transform: translateX(-50%);
  font-weight: 700;
  font-size: 20px;
  background: linear-gradient(90deg, #fff, #000, #fff);
  background-size: 200% auto;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: shine 5s linear infinite;
  white-space: nowrap;
  pointer-events: none;
}

@keyframes shine {
  0% {
    background-position: 200% center;
  }
  100% {
    background-position: -200% center;
  }
}

  .sidebar-header {
    position: relative;
    height: 100px;
    background-color: #f8f9fa;
  }

  .logo-text {
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 23px;
    font-weight: 600;
    letter-spacing: 2px;
    color: #333;
    text-transform: uppercase;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    overflow: hidden;
    position: relative;
  }

  .logo-text::before {
    content: '';
    position: absolute;
    top: 0;
    left: -75%;
    width: 50%;
    height: 100%;
    background: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(0, 0, 0, 0.1) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: skewX(-20deg);
    animation: diamond-shine 2.5s infinite;
  }

  @keyframes diamond-shine {
    0% {
      left: -75%;
    }
    100% {
      left: 125%;
    }
  }

  .sidebar-icon {
    width: 28px;
    height: 20px;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  #sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 65vw;
    height: 100vh;
    background-color: #ffffff;
    box-shadow: 2px 0 10px rgba(0,0,0,0.1);
    z-index: 1000;
    display: flex;
    flex-direction: column;
  }

  .sidebar-header {
    padding: 12px;
    background: #f1f3f5;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #dee2e6;
  }

  .sidebar-header img {
    width: 60px;
    height: 60px;
    object-fit: contain;
    user-select: none;
    margin-right: 12px;
  }

  #sidebar nav ul {
    list-style: none;
    padding: 0 12px;
    margin: 0;
  }

  #sidebar nav ul .section-title {
    font-size: 13px;
    font-weight: bold;
    color: #6c757d;
    padding: 20px 0 8px 8px;
    text-transform: uppercase;
  }

  #sidebar nav ul li {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 12px 16px;
    border-radius: 6px;
    font-size: 15px;
    font-weight: 600;
    color: #000;
    border-left: 5px solid transparent;
    transition: background 0.2s ease, border-left-color 0.2s ease;
  }

  #sidebar nav ul li a {
    display: flex;
    align-items: center;
    gap: 12px;
    color: inherit;
    text-decoration: none;
    width: 100%;
  }

  #sidebar nav ul li:hover,
  #sidebar nav ul li.active {
    background-color: #e9ecef;
    border-left-color: #0d6efd;
  }

  #sidebar nav ul li svg.icon {
    width: 22px;
    height: 22px;
    fill: #0d6efd;
  }

  .sidebar-icon span {
    display: block;
    height: 3px;
    width: 100%;
    background-color: #333;
    border-radius: 2px;
    transition: background-color 0.3s ease, transform 0.3s ease;
  }

  .sidebar-icon span:last-child {
    margin-left: 5px;
    width: calc(100% - 5px);
  }

  .sidebar-icon:hover span {
    background-color: #000;
  }

  #language-selector {
    cursor: pointer;
    user-select: none;
    font-size: 12px;
    background: #f1f3f5;
    border-radius: 5px;
    padding: 4px 8px;
    display: inline-flex;
    align-items: center;
    gap: 4px;
    position: relative;
    z-index: 1001;
  }

  #language-selector span {
    font-weight: 600;
    text-transform: uppercase;
    display: flex;
    align-items: center;
    gap: 4px;
  }

  #language-selector img {
    width: 16px;
    height: 10px;
    border-radius: 2px;
  }

  .language-dropdown {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background: #ffffff;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0,0,0,0.15);
    min-width: 70px;
    font-size: 12px;
    color: #000;
    z-index: 1100;
    margin-top: 3px;
    overflow: hidden;
  }

  .language-dropdown div {
    padding: 6px 10px;
    cursor: pointer;
    text-transform: uppercase;
    display: flex;
    align-items: center;
    gap: 5px;
  }

  .language-dropdown div img {
    width: 16px;
    height: 10px;
    border-radius: 2px;
  }

  .language-dropdown div:hover {
    background: #e9ecef;
  }

  .avatar-container {
    position: relative;
  }

  .avatar {
    width: 28px;
    height: 28px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid #ced4da;
    cursor: pointer;
  }

  .avatar-dropdown {
    position: absolute;
    top: 110%;
    right: 0;
    background: #ffffff;
    border-radius: 6px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    min-width: 180px;
    display: none;
    z-index: 1001;
  }

  .avatar-dropdown div {
    padding: 10px 14px;
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
    border-bottom: 1px solid #e9ecef;
  }

  .avatar-dropdown div:last-child {
    border: none;
  }

  .avatar-dropdown div:hover {
    background: #f8f9fa;
  }

  .icon {
    width: 18px;
    height: 18px;
  }

  .icon path,
  .icon circle,
  .icon rect,
  .icon polygon,
  .icon line,
  .icon polyline {
    fill: #000;
    stroke: #000;
  }

  #sidebar.active {
    transform: translateX(0);
  }

  #sidebar {
    transform: translateX(-100%);
    background-color: #ffffff;
    box-shadow: 2px 0 10px rgba(0,0,0,0.1);
  }

  header.shifted,
  #page-wrapper.shifted {
    transform: translateX(65vw);
    max-width: calc(100vw - 70vw);
    transition: transform 0.3s ease, max-width 0.3s ease;
  }

  #greeting {
    font-size: 18px;
    line-height: 1.6;
    margin-bottom: 40px;
  }

  .wallets-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 16px;
    margin-bottom: 40px;
  }

  .wallet-card {
    flex: 1 1 280px;
    padding: 16px 20px;
    background: #ffffff;
    border-radius: 20px;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-height: 120px;
    max-width: 320px;
  }

  .wallet-header {
    display: flex;
    align-items: flex-start;
    gap: 20px;
  }

  .wallet-icon {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #ffffff;
    border: 1px solid #dee2e6;
  }

  .wallet-icon i {
    font-size: 28px;
    color: #ffffff;
  }

  .wallet-info {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex: 1;
  }

  .wallet-text .label {
    font-size: 14px;
    opacity: 0.7;
    margin-bottom: 6px;
  }

  .wallet-text .amount {
    font-size: 22px;
    font-weight: bold;
  }

  .wallet-card canvas {
    margin: 0;
    padding: 0;
    width: 100% !important;
    height: 60px !important;
    display: block;
    box-sizing: border-box;
  }

  .trade-signal {
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    margin-top: 40px;
  }
</style>
</head>

<body>

<div id="sidebar" aria-label="Sidebar Navigation"><div class="sidebar-header">
  <span class="logo-text">STOCTMARTKET</span>
</div>


  <nav role="navigation" aria-label="Main Menu">
    <ul>
      <li class="section-title">--Dashboard</li>

      <li>
        <a id="link-dashboard" href="dashboard">
          <svg class="icon" viewBox="0 0 24 24"><path d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8v-10h-8v10zm0-18v6h8V3h-8z"/></svg>
          Dashboard
        </a>
      </li>

      <li class="active">
        <a id="link-deposit" href="deposit">
          <svg class="icon" viewBox="0 0 24 24"><path d="M12 2a10 10 0 1 0 10 10A10.011 10.011 0 0 0 12 2zm0 18a8 8 0 1 1 8-8 8.009 8.009 0 0 1-8 8zm-1-11h2v6h-2zm0 8h2v2h-2z"/></svg>
          Make Deposit
        </a>
      </li>

      <li>
        <a id="link-investment" href="investment">
          <svg class="icon" viewBox="0 0 24 24"><path d="M9 17H7v-5H2v5H0v-7h9v7zm10 2h-8v-2h8v-3h-5v-2h7v7z"/></svg>
          Invest
        </a>
      </li>

      <li>
        <a id="link-withdraw" href="withdraw">
          <svg class="icon" viewBox="0 0 24 24"><path d="M20 4H4v16h16V4zm-2 14H6V6h12v12zM8 9h8v2H8zm0 4h5v2H8z"/></svg>
          Withdraw
        </a>
      </li>

<li>
  <a id="link-market" href="/market">
    <svg class="icon" viewBox="0 0 24 24" width="24" height="24" fill="currentColor">
      <path d="M11.5 7h2.5c.276 0 .5-.224.5-.5s-.224-.5-.5-.5H11v-1h1.5c.276 0 .5-.224.5-.5s-.224-.5-.5-.5H11V3h-1v1H8v2h2v6H8v2h2v1H8v2h4c3.314 0 6-2.686 6-6s-2.686-6-6-6zM12 17h-2v-2h2v2zm0-6h-2V9h2v2z"/>
    </svg>
    Market
  </a>
</li>

      <li class="section-title">--Activity</li>

      <li>
        <a id="link-history" href="history">
          <svg class="icon" viewBox="0 0 24 24"><path d="M3 17h2v-6H3v6zm4 0h2v-4H7v4zm4 0h2v-8h-2v8zm4 0h2v-10h-2v10z"/></svg>
          History
        </a>
      </li>

      <li class="section-title">--Settings</li>

      <li>
        <a id="link-profile" href="profile">
          <svg class="icon" viewBox="0 0 24 24"><path d="M12 8a4 4 0 1 0 4 4 4 4 0 0 0-4-4zm0 6a2 2 0 1 1 2-2 2 2 0 0 1-2 2zm6.8-4.2l-1.7-.6a6.54 6.54 0 0 0-1.1-2.1l1.1-1.5-2.2-2.2-1.5 1.1a6.52 6.52 0 0 0-2.1-1.1l-.6-1.7H9l-.6 1.7a6.54 6.54 0 0 0-2.1 1.1L4.8 6.2 2.6 8.4l1.1 1.5a6.54 6.54 0 0 0-1.1 2.1l-1.7.6v2.4l1.7.6a6.54 6.54 0 0 0 1.1 2.1l-1.1 1.5 2.2 2.2 1.5-1.1a6.52 6.52 0 0 0 2.1 1.1l.6 1.7h2.4l.6-1.7a6.54 6.54 0 0 0 2.1-1.1l1.5 1.1 2.2-2.2-1.1-1.5a6.54 6.54 0 0 0 1.1-2.1l1.7-.6v-2.4z"/></svg>
          Edit Profile
        </a>
      </li>

 <li>
  <button id="logout-btn" style="all: unset; cursor: pointer; display: flex; align-items: center; gap: 0.5rem;">
    <svg class="icon" viewBox="0 0 24 24" width="24" height="24">
      <path d="M16 13v-2h-8v2h8zm2-10H6c-1.1 0-2 .9-2 2v4h2V5h12v14H6v-4H4v4c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"/>
    </svg>
    Logout
  </button>
</li>

<!-- Confirmation Modal -->
<div id="logout-modal" style="display:none; position:fixed; inset:0; background:rgba(0,0,0,0.5); justify-content:center; align-items:center; z-index:1000;">
  <div style="background:#f8f9fa; padding:20px; border-radius:8px; width:300px; text-align:center;">
    <p>Are you sure you want to logout?</p>
    <button id="confirm-logout" style="margin-right:10px;">Yes</button>
    <button id="cancel-logout">Cancel</button>
    <div id="logout-loading" style="display:none; margin-top:10px;">
      <span>Logging out...</span>
      <div class="loader" style="border:4px solid #f3f3f3; border-top:4px solid #3498db; border-radius:50%; width:20px; height:20px; animation: spin 1s linear infinite; display:inline-block; margin-left:10px;"></div>
    </div>
  </div>
</div>

<style>
  @keyframes spin {
    0% { transform: rotate(0deg);}
    100% { transform: rotate(360deg);}
  }
</style>
      </li>
    </ul>
  </nav>
</div>

<header>
  <div class="header-left">
    <div id="sidebarToggle" class="sidebar-icon" role="button" tabindex="0" aria-label="Toggle Sidebar">
      <span></span><span></span><span></span>
    </div>

    <div class="language-switcher">
      <div id="language-selector" class="top-bar-item" role="button" tabindex="0" aria-haspopup="true" aria-expanded="false">
        <span id="current-lang-label">
          <img src="https://flagcdn.com/us.svg" alt="US Flag" />
          US
        </span> ▼
      </div>
      <div id="language-dropdown" class="language-dropdown" role="menu" aria-label="Language selection">
        <div data-lang="en"><img src="https://flagcdn.com/us.svg" alt="US Flag" /> US</div>
        <div data-lang="en-GB"><img src="https://flagcdn.com/gb.svg" alt="UK Flag" /> UK</div>
        <div data-lang="es"><img src="https://flagcdn.com/es.svg" alt="Spain Flag" /> ES</div>
        <div data-lang="fr"><img src="https://flagcdn.com/fr.svg" alt="France Flag" /> FR</div>
        <div data-lang="de"><img src="https://flagcdn.com/de.svg" alt="Germany Flag" /> DE</div>
        <div data-lang="it"><img src="https://flagcdn.com/it.svg" alt="Italy Flag" /> IT</div>
        <div data-lang="zh-CN"><img src="https://flagcdn.com/cn.svg" alt="China Flag" /> CN</div>
        <div data-lang="ja"><img src="https://flagcdn.com/jp.svg" alt="Japan Flag" /> JP</div>
        <div data-lang="ru"><img src="https://flagcdn.com/ru.svg" alt="Russia Flag" /> RU</div>
      </div>
    </div>
  </div>

  <!-- Centered Word -->
  <div class="header-center">
    STOCTMARTKET
  </div>

  <div class="avatar-container">
    <img src="https://cdn-icons-png.flaticon.com/512/149/149071.png" alt="Default Avatar" class="avatar" id="avatarBtn" />
    <div class="avatar-dropdown" id="avatarDropdown" role="menu">
      <div role="menuitem" class="menu-link" id="safetyBtn">
        <svg class="icon" viewBox="0 0 24 24">
          <path d="M12 1C8.1 1 5 4.1 5 8V11H3v10h18V11h-2V8c0-3.9-3.1-7-7-7zM8 8c0-2.2 1.8-4 4-4s4 1.8 4 4v3H8V8z"/>
        </svg> Safety & Security
      </div>
      <div role="menuitem" class="menu-link" id="changePasswordBtn">
        <svg class="icon" viewBox="0 0 24 24">
          <path d="M12 7V3l8 8-8 8v-4H4V7h8z"/>
        </svg> Change Password
      </div>
      <div role="menuitem" class="menu-link" id="signOutBtn">
        <svg class="icon" viewBox="0 0 24 24">
          <path d="M16 13v-2h-8v2h8zm2-10H6c-1.1 0-2 .9-2 2v4h2V5h12v14H6v-4H4v4c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"/>
        </svg> Sign Out
      </div>
    </div>
  </div>
</header>

<script>
  document.getElementById('safetyBtn').addEventListener('click', () => {
    window.location.href = 'safety';
  });

  document.getElementById('changePasswordBtn').addEventListener('click', () => {
    window.location.href = 'change-password';
  });

  document.getElementById('signOutBtn').addEventListener('click', () => {
    // Clear any local storage or session storage tokens (optional)
    localStorage.removeItem('authToken'); // adjust key if you use one
    sessionStorage.clear();

    // Redirect to signout page or login page
    window.location.href = 'signout';
  });
</script>
      </div>
    </div>
  </header>

  <main class="container" role="main">
  
    <!-- Greeting Section -->
    <section id="greeting" aria-labelledby="welcome">
      <h1 id="welcome" style="font-size: 26px; font-weight: 700;">Welcome back...</h1>
      <div id="date" style="font-size: 18px; font-weight: 600; margin-top: 6px;"></div>
      <p style="font-size: 14px; font-weight: 500; color: #121212; margin-top: 10px;">Home / Dashboard</p>
    </section>
  </main>
</body>

<section id="verify-banner" style="display: none; background-color: #f8f9fa; color: #000; display: flex; justify-content: space-between; align-items: center; padding: 6px 12px; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-size: 13px;">
  <div>
    <strong>Account Not Yet Verified</strong>
    <span style="margin-left: 8px;">Document verification is required to complete registration.</span>
  </div>
  <a href="profile" style="margin-left: 16px; background-color: #ffffff; color: #000; padding: 5px 10px; text-decoration: none; border-radius: 3px; font-weight: 600; font-size: 13px;">Upload Document</a>
</section>
    <!-- Wallet Cards -->
    <div class="wallets-container">
      <div class="wallet-card">
        <div class="wallet-header">
          <div class="wallet-icon" style="background-color: #2e4aad;">
            <i class="ph ph-wallet"></i>
          </div>
          <div class="wallet-info">
            <div class="wallet-text">
              <div class="label">BALANCE</div>
              <div class="amount" id="balance-amount">$ 0.00</div>
            </div>
          </div>
        </div>
        <canvas id="chart-balance"></canvas>
      </div>

      <div class="wallet-card">
        <div class="wallet-header">
          <div class="wallet-icon" style="background-color: #2e7d32;">
            <i class="ph ph-wallet"></i>
          </div>
          <div class="wallet-info">
            <div class="wallet-text">
              <div class="label">ACTIVE DEPOSIT</div>
              <div class="amount" id="deposit-amount">$ 0.00</div>
            </div>
          </div>
        </div>
        <canvas id="chart-deposit"></canvas>
      </div>

      <div class="wallet-card">
        <div class="wallet-header">
          <div class="wallet-icon" style="background-color: #c62828;">
            <i class="ph ph-wallet"></i>
          </div>
          <div class="wallet-info">
            <div class="wallet-text">
              <div class="label">EARNED BALANCE</div>
              <div class="amount" id="earned-amount">$ 0.00</div>
            </div>
          </div>
        </div>
        <canvas id="chart-earned"></canvas>
      </div>
    </div>

<!-- Trade Signal -->
<div class="trade-signal tap-animate" style="background-color: #f8f9fa; padding: 8px; border-radius: 12px; color: #000; font-family: sans-serif; box-shadow: 0 4px 12px rgba(0,0,0,0.2); width: 290px;">
  <div style="font-weight: 1000; font-size: 12px; margin-bottom: 20px;">Trade Signal:</div>
  
  <div class="signal-bar" style="position: relative; width: 90%; height: 18px; background: #e9ecef; border-radius: 10px; overflow: visible;">
    <div id="signalFill" style="position: absolute; left: 0; top: 0; height: 100%; width: 0%; background: linear-gradient(145deg, #ef4444, #b22222); border-radius: 10px 0 0 10px; transition: width 1.5s ease; z-index: 5;"></div>
    
    <div id="signalHandle" style="position: absolute; top: 50%; width: 22px; height: 22px; background: linear-gradient(145deg, #f87171, #b22222); border-radius: 50%; box-shadow: inset 2px 2px 4px rgba(255, 255, 255, 0.6), 0 2px 5px rgba(0, 0, 0, 0.2); left: 0; transform: translate(0, -50%); transition: left 1.5s ease; z-index: 10; border: 2px solid #b22222;"></div>
  </div>
  
  <div id="signalLabel" style="text-align: right; font-size: 13px; font-weight: 500; margin-top: 4px;">Loading...</div>
</div>

<!-- Crypto Market Card -->
<div class="card tap-animate" style="
  background: #ffffff;
  border-radius: 20px;
  padding: 20px;
  max-width: 480px;
  color: #000; /* Changed to true black for best readability */
  font-family: 'Segoe UI', sans-serif;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  margin: 40px auto;
">
  <div style="display: flex; align-items: center; gap: 10px; font-weight: 600; font-size: 14px; color: #f7931a;">
    <span style="font-size: 20px;">₿</span>
    <span>Crypto Market</span>
  </div>

  <input
    type="text"
    id="searchInput"
    placeholder="Search coins..."
    style="width: 85%; padding: 8px 12px; margin: 14px 0;
    font-size: 14px; background: #f9fafb; color: #000;
    border: 1px solid #d1d5db; border-radius: 10px;
    outline: none; transition: border 0.2s;"
    onfocus="this.style.borderColor='#3b82f6'"
    onblur="this.style.borderColor='#d1d5db'"
  />

  <div id="cardsContainer" style="
    display: flex;
    flex-direction: column;
    gap: 10px;
    max-height: 400px;
    overflow-y: auto;
    padding-right: 6px;
  ">
    <!-- Coin cards go here -->
  </div>
</div>

<!-- Load More Button -->
<button id="loadMoreBtn" style="width: 100%; margin-top: 0.01px; padding: 10px; font-size: 14px;
  background-color: #2563eb; color: white; border: none; border-radius: 12px; cursor: pointer;"
  onmouseover="this.style.backgroundColor='#1d4ed8'"
  onmouseout="this.style.backgroundColor='#2563eb'">
  Load More
</button>

<!-- Modal for coin details -->
<div id="detailModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%;
  background: rgba(0, 0, 0, 0.6); align-items: center; justify-content: center; z-index: 9999;">
  <div style="background: #ffffff; padding: 20px; border-radius: 16px; width: 95%; max-width: 560px;
    position: relative; max-height: 90vh; overflow-y: auto; color: #000;">
    <button onclick="closeModal()" style="position: absolute; top: 10px; right: 10px;
      background: #ef4444; color: white; border: none; padding: 5px 10px; border-radius: 6px; cursor: pointer;">
      Close
    </button>
    <div id="modalContent">Loading...</div>
  </div>
</div>

<script>
  const cardsContainer = document.getElementById("cardsContainer");
  const searchInput = document.getElementById("searchInput");
  const loadMoreBtn = document.getElementById("loadMoreBtn");

  let coinsData = [];
  let currentPage = 1;
  const perPage = 20;

  async function fetchCoins(page = 1, perPageCount = perPage) {
    try {
      const url = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${perPageCount}&page=${page}&sparkline=false`;
      const response = await fetch(url);
      if (!response.ok) throw new Error("Failed to fetch market data");
      return await response.json();
    } catch (error) {
      alert("Error: " + error.message);
      return [];
    }
  }

  function createCard(coin) {
    const card = document.createElement("div");
    card.style.background = "##f1f3f5";
    card.style.borderRadius = "12px";
    card.style.padding = "12px";
    card.style.display = "flex";
    card.style.alignItems = "center";
    card.style.gap = "12px";
    card.style.color = "#000";
    card.style.boxShadow = "0 2px 6px rgba(0,0,0,0.3)";
    card.style.cursor = "pointer";

    card.addEventListener("click", () => showCoinDetails(coin.id, coin.symbol));

    card.innerHTML = `
      <img src="${coin.image}" alt="${coin.name}" style="width: 32px; height: 32px; border-radius: 50%;" />
      <div style="flex: 1;">
        <div style="font-weight: 600; font-size: 14px;">${coin.name} (${coin.symbol.toUpperCase()})</div>
        <div style="font-size: 12px; color: #94a3b8;">Market Cap: $${coin.market_cap.toLocaleString()}</div>
      </div>
      <div style="text-align: right;">
        <div style="font-weight: 600;">$${coin.current_price.toLocaleString()}</div>
        <div style="font-size: 12px; color: ${coin.price_change_percentage_24h >= 0 ? '#22c55e' : '#ef4444'};">
          ${coin.price_change_percentage_24h?.toFixed(2)}%
        </div>
      </div>
    `;
    return card;
  }

  function renderCoins(coins) {
    cardsContainer.innerHTML = "";
    coins.forEach(coin => {
      cardsContainer.appendChild(createCard(coin));
    });
  }

  function filterCoins(query) {
    const filtered = coinsData.filter(coin =>
      coin.name.toLowerCase().includes(query.toLowerCase()) ||
      coin.symbol.toLowerCase().includes(query.toLowerCase())
    );
    renderCoins(filtered);
  }

  async function showCoinDetails(coinId, symbol) {
    const modal = document.getElementById("detailModal");
    const modalContent = document.getElementById("modalContent");
    modal.style.display = "flex";
    modalContent.innerHTML = "Loading...";

    try {
      const response = await fetch(`https://api.coingecko.com/api/v3/coins/${coinId}`);
      if (!response.ok) throw new Error("Failed to fetch coin details");
      const coin = await response.json();

      modalContent.innerHTML = `
        <div style="font-family: 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #121212;">
          <h2 style="margin-top: 0; font-size: 24px; font-weight: 600;">${coin.name} (${coin.symbol.toUpperCase()})</h2>
          <img src="${coin.image.large}" alt="${coin.name}" style="width: 60px; height: 60px; margin: 10px 0;" />
          <p><strong>Price:</strong> $${coin.market_data.current_price.usd.toLocaleString()}</p>
          <p><strong>Market Cap:</strong> $${coin.market_data.market_cap.usd.toLocaleString()}</p>
          <p><strong>High 24h:</strong> $${coin.market_data.high_24h.usd.toLocaleString()}</p>
          <p><strong>Low 24h:</strong> $${coin.market_data.low_24h.usd.toLocaleString()}</p>
          <div style="margin: 20px 0;">
            <strong>Description:</strong>
            <p style="font-size: 15px; color: #94a3b8; margin-top: 4px;">
              ${coin.description.en?.split('. ')[0] || "No description available."}.
            </p>
          </div>
          <div>
            <strong>Live Chart:</strong>
            <div style="margin-top: 10px;">
              <iframe src="https://s.tradingview.com/widgetembed/?frameElementId=tradingview_${symbol}&symbol=BINANCE:${symbol.toUpperCase()}USDT&interval=1D&theme=dark&style=1"
                style="border: none; width: 100%; height: 240px;" allowtransparency="true" scrolling="no">
              </iframe>
            </div>
          </div>
        </div>
      `;
    } catch (err) {
      modalContent.innerHTML = `<p style="color: #ef4444;">${err.message}</p>`;
    }
  }

  function closeModal() {
    document.getElementById("detailModal").style.display = "none";
  }

  searchInput.addEventListener("input", () => {
    filterCoins(searchInput.value);
  });

  loadMoreBtn.addEventListener("click", async () => {
    currentPage++;
    const moreCoins = await fetchCoins(currentPage);
    coinsData = coinsData.concat(moreCoins);
    filterCoins(searchInput.value);
  });

  (async () => {
    coinsData = await fetchCoins(currentPage);
    renderCoins(coinsData);
  })();
</script>

<script>
  // Firebase Config
  const firebaseConfig = {
  apiKey: "AIzaSyD1nlcsxR7SkaB4hPVLcehdjV1bQPUXV5I",
  authDomain: "stoctmartket-en.firebaseapp.com", // Assuming this typo is intentional and matches your actual Firebase project ID
  projectId: "stoctmartket-en",
  storageBucket: "stoctmartket-en.appspot.com", // FIXED: Correct Firebase storage bucket domain
  messagingSenderId: "925990118609",
  appId: "1:925990118609:web:77bdfd4c16bc584070d1f0"
};

  firebase.initializeApp(firebaseConfig);
  const auth = firebase.auth();
  const db = firebase.firestore();

  // Function to update wallet display
// Helper: format numbers as currency
const formatAmount = (amount, currency = 'USD', locale = 'en-US') => {
  return new Intl.NumberFormat(locale, {
    style: 'currency',
    currency: currency,
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).format(amount || 0);
};

// Country to locale mapping
const countryToLocale = {
  'United States': 'en-US',
  'Nigeria': 'en-NG',
  'United Kingdom': 'en-GB',
  'Germany': 'de-DE',
  'France': 'fr-FR',
  'India': 'en-IN',
  // Add more countries as needed
};

// Update wallet UI
function updateWallets(data, currency = 'USD', locale = 'en-US') {
  document.getElementById('balance-amount').innerText = formatAmount(data.balance, currency, locale);
  document.getElementById('deposit-amount').innerText = formatAmount(data.activeDeposit, currency, locale);
  document.getElementById('earned-amount').innerText = formatAmount(data.earned, currency, locale);
}

// Firebase auth listener
auth.onAuthStateChanged(user => {
  if (user) {
    db.collection('users').doc(user.uid).onSnapshot(doc => {
      if (doc.exists) {
        const userData = doc.data();

        // Show/hide verification banner
        const isVerified = userData.isVerified === true;
        document.getElementById("verify-banner").style.display = isVerified ? "none" : "flex";

        // Welcome message
        const name = `${userData.firstName || ''} ${userData.lastName || ''}`.trim() || "Trader";
        document.getElementById("welcome").textContent = `Welcome back, ${name}!`;

        // Determine currency and locale
        let currency = userData.currency || 'USD';
        const locale = countryToLocale[userData.country] || 'en-US';
        if (userData.country === 'United Kingdom') {
          currency = 'GBP';
        }

        // Update wallet display
        updateWallets(userData, currency, locale);

        // Show account creation date if available
        if (userData.createdAt && typeof userData.createdAt.toDate === 'function') {
          const createdAt = userData.createdAt.toDate();
          const formattedDate = createdAt.toLocaleString('en-GB', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            timeZoneName: 'short'
          });
          document.getElementById("created-date").innerText = formattedDate;
        } else {
          document.getElementById("created-date").innerText = 'Date not available';
        }
      }
    });
  } else {
    // Logged out state
    document.getElementById("verify-banner").style.display = "none";
    document.getElementById("welcome").textContent = `Welcome back...`;
    updateWallets({ balance: 0, activeDeposit: 0, earned: 0 }, 'USD', 'en-US');
    document.getElementById("created-date").innerText = '';
  }
});

// Display current date
document.getElementById("date").innerText = new Date().toLocaleDateString('en-GB', {
  weekday: 'long',
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Line Chart Setup
function generateInitialData() {
  return Array.from({ length: 20 }, () => Math.floor(Math.random() * 20));
}

function renderLiveChart(id, color) {
  const ctx = document.getElementById(id).getContext('2d');
  const chart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: Array(20).fill(""),
      datasets: [{
        data: generateInitialData(),
        borderColor: color,
        backgroundColor: color + '33',
        tension: 0.4,
        fill: true,
      }]
    },
    options: {
      layout: { padding: 0 },
      animation: false,
      responsive: true,
      plugins: { legend: { display: false } },
      scales: {
        x: { display: false },
        y: { display: false, min: 0, max: 20 }
      },
      elements: { point: { radius: 0 }, line: { borderWidth: 2 } }
    }
  });

  setInterval(() => {
    chart.data.datasets[0].data.push(Math.floor(Math.random() * 20));
    chart.data.datasets[0].data.shift();
    chart.update();
  }, 1000);
}

// Initialize charts
renderLiveChart("chart-balance", "#2e4aad");
renderLiveChart("chart-deposit", "#2e7d32");
renderLiveChart("chart-earned", "#c62828");

// Trading Signal Logic
function getSignalLabel(percent) {
  if (percent < 30) return "Weak";
  if (percent < 70) return "Moderate";
  return "Strong";
}

function updateSignal(strength) {
  const fill = document.getElementById("signalFill");
  const handle = document.getElementById("signalHandle");
  const label = document.getElementById("signalLabel");

  fill.style.width = `${strength}%`;
  handle.style.left = `calc(${strength}% - 12px)`;
  label.innerText = getSignalLabel(strength);
  label.style.color = strength > 70 ? "#ef4444" : strength > 30 ? "#facc15" : "#22c55e";
}

function animateSignal() {
  const strength = Math.floor(Math.random() * 101);
  updateSignal(strength);
}

setInterval(animateSignal, 3000);
animateSignal(); // initial run
</script>
  
    <script>
    const selector = document.getElementById('language-selector');
    const dropdown = document.getElementById('language-dropdown');
    const currentLabel = document.getElementById('current-lang-label');

    selector.addEventListener('click', () => {
      const expanded = selector.getAttribute('aria-expanded') === 'true';
      selector.setAttribute('aria-expanded', !expanded);
      dropdown.style.display = expanded ? 'none' : 'block';
    });

    dropdown.querySelectorAll('div').forEach(item => {
      item.addEventListener('click', () => {
        const langCode = item.textContent.trim().slice(-2).toUpperCase();
        const img = item.querySelector('img').cloneNode(true);
        currentLabel.innerHTML = '';
        currentLabel.appendChild(img);
        currentLabel.append(' ' + langCode);
        selector.setAttribute('aria-expanded', 'false');
        dropdown.style.display = 'none';
      });
    });

    document.addEventListener('click', (e) => {
      if (!selector.contains(e.target) && !dropdown.contains(e.target)) {
        selector.setAttribute('aria-expanded', 'false');
        dropdown.style.display = 'none';
      }
    });

    // Avatar dropdown
    const avatarBtn = document.getElementById('avatarBtn');
    const avatarDropdown = document.getElementById('avatarDropdown');

    avatarBtn.addEventListener('click', e => {
      e.stopPropagation();
      avatarDropdown.style.display = avatarDropdown.style.display === 'block' ? 'none' : 'block';
    });

    document.addEventListener('click', e => {
      if (!avatarDropdown.contains(e.target) && e.target !== avatarBtn) {
        avatarDropdown.style.display = 'none';
      }
    });

    // Sidebar toggle
    const sidebarToggle = document.getElementById('sidebarToggle');
    const sidebar = document.getElementById('sidebar');
    const header = document.querySelector('header');
    const pageWrapper = document.getElementById('page-wrapper');

    sidebarToggle.addEventListener('click', () => {
      const isActive = sidebar.classList.contains('active');
      if (isActive) {
        sidebar.classList.remove('active');
        header.classList.remove('shifted');
        pageWrapper.classList.remove('shifted');
      } else {
        sidebar.classList.add('active');
        header.classList.add('shifted');
        pageWrapper.classList.add('shifted');
      }
    });

    // Accessibility: toggle sidebar via keyboard (Enter or Space)
    sidebarToggle.addEventListener('keydown', e => {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        sidebarToggle.click();
      }
    });

    // Optional: Allow keyboard navigation on sidebar menu items (focus + Enter to log or navigate)
    const menuItems = sidebar.querySelectorAll('nav ul li[role="menuitem"]');
    menuItems.forEach(item => {
      item.addEventListener('keydown', e => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          // For demo, just alert the menu item text
          alert(`Selected menu: ${item.textContent.trim()}`);
          // You can replace with actual navigation or function
        }
      });
    });
  </script>
  
  <script>
  window.addEventListener('DOMContentLoaded', () => {
    const headerHeight = document.querySelector('header').offsetHeight;
    document.querySelector('.container').style.marginTop = `${headerHeight + 10}px`;
  });
</script>

<style>

.investment-container {
  max-width: 800px;
  margin: 40px auto;
  padding: 24px;
  background: #ffffff;
  border-radius: 20px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  font-family: 'Segoe UI', sans-serif;
  color: #cbd5e1;
}

.investment-container .investment-header {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 16px;
  font-weight: 600;
  color: #3b82f6;
  margin-bottom: 16px;
}

.investment-container .investment-status {
  margin-bottom: 20px;
  font-size: 13px;
  color: #94a3b8;
  display: flex;
  align-items: center;
  gap: 6px;
}

.investment-container table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0 10px;
  font-size: 14px;
}

.investment-container th {
  text-align: left;
  padding: 14px;
  background-color: #1f2a4a;
  font-weight: 600;
  color: #cbd5e1;
}

.investment-container th:first-child {
  border-radius: 12px 0 0 12px;
}

.investment-container th:last-child {
  text-align: center;
  border-radius: 0 12px 12px 0;
}

.investment-container td {
  padding: 14px;
  background-color: #24335f;
  color: #cbd5e1;
  transition: background 0.3s;
}

.investment-container tr:hover td {
  background-color: #2e447f;
}

.investment-container .no-data {
  padding: 18px;
  text-align: center;
  font-weight: 500;
  font-size: 14px;
  color: #f87171;
  border-radius: 12px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  background-color: #4b2222;
}

.investment-container .badge {
  display: inline-block;
  padding: 5px 12px;
  font-size: 12px;
  font-weight: 600;
  color: white;
  border-radius: 999px;
  text-transform: capitalize;
}

.investment-container .badge.active {
  background-color: #22c55e;
}

.investment-container .badge.pending {
  background-color: #facc15;
  color: #0f172a;
}

.investment-container .badge.failed {
  background-color: #ef4444;
}

.investment-container .badge.completed {
  background-color: #3b82f6;
}

.investment-container .badge.na {
  background-color: #94a3b8;
  color: #0f172a;
}

@media (max-width: 600px) {
  .investment-container table,
  .investment-container thead,
  .investment-container tbody,
  .investment-container th,
  .investment-container td,
  .investment-container tr {
    display: block;
  }

  .investment-container th {
    display: none;
  }

  .investment-container td {
    position: relative;
    padding-left: 50%;
    margin-bottom: 10px;
    background-color: #f8f9fa;
  }

  .investment-container td::before {
    position: absolute;
    top: 14px;
    left: 14px;
    width: 45%;
    padding-right: 10px;
    white-space: nowrap;
    font-weight: 600;
    color: #94a3b8;
    content: attr(data-label);
  }
}
</style>

<div class="investment-container">
  <div class="investment-header">
    <svg xmlns="http://www.w3.org/2000/svg" fill="#3b82f6" viewBox="0 0 24 24" width="22" height="22">
      <path d="M12 2a10 10 0 1 0 10 10A10.011 10.011 0 0 0 12 2Zm1 14h-2v-2h2Zm0-4h-2V7h2Z"/>
    </svg>
    <span>Your Recent Investments</span>
  </div>

  <p id="status-msg" class="investment-status">
    <svg xmlns="http://www.w3.org/2000/svg" fill="#3b82f6" viewBox="0 0 24 24" width="16" height="16">
      <circle cx="12" cy="12" r="10"/>
      <line x1="12" y1="8" x2="12" y2="12" stroke="#3b82f6" stroke-width="2" stroke-linecap="round"/>
      <circle cx="12" cy="16" r="1" fill="#3b82f6"/>
    </svg>
    Loading your investment history...
  </p>

  <div style="overflow-x: auto;">
    <table>
      <thead>
        <tr>
          <th>Date/Time</th>
          <th>Plan</th>
          <th>Return</th>
          <th style="text-align: right;">Amount</th>
          <th style="text-align: center;">Status</th>
        </tr>
      </thead>
      <tbody id="investment-table-body">
        <tr id="no-data-row">
          <td colspan="5" class="no-data">
            <svg xmlns="http://www.w3.org/2000/svg" fill="#ef4444" viewBox="0 0 24 24" width="18" height="18">
              <path d="M12 0C5.372 0 0 5.372 0 12c0 6.628 5.372 12 12 12s12-5.372 12-12c0-6.628-5.372-12-12-12Zm0 22a9.958 9.958 0 0 1-7.07-2.93A9.958 9.958 0 0 1 2 12c0-2.654 1.04-5.13 2.93-6.93A9.958 9.958 0 0 1 12 2c2.654 0 5.13 1.04 6.93 2.93A9.958 9.958 0 0 1 22 12c0 2.654-1.04 5.13-2.93 6.93A9.958 9.958 0 0 1 12 22Z"/>
            </svg>
            No investments found for your account.
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>

<script>
  const tableBody = document.getElementById('investment-table-body');
  const noDataRow = document.getElementById('no-data-row');
  const statusMsg = document.getElementById('status-msg');

  function clearTable() {
    tableBody.innerHTML = '';
    noDataRow.style.display = 'none';
  }

  function renderInvestment(investment) {
    const tr = document.createElement('tr');

    const dateStr = investment.timestamp?.seconds
      ? new Date(investment.timestamp.seconds * 1000).toLocaleString()
      : 'N/A';

    const amountStr = typeof investment.amount === 'number'
      ? `$${investment.amount.toFixed(2)}`
      : investment.amount ?? 'N/A';

    const expectedReturnStr = typeof investment.expectedReturn === 'number'
      ? `$${investment.expectedReturn.toFixed(2)}`
      : investment.expectedReturn ?? 'N/A';

    const status = investment.status?.toLowerCase() || 'na';
    const badge = `<span class="badge ${status}">${status}</span>`;

    tr.innerHTML = `
      <td data-label="Date/Time">${dateStr}</td>
      <td data-label="Plan">${investment.plan ?? 'N/A'}</td>
      <td data-label="Return">${expectedReturnStr}</td>
      <td data-label="Amount" style="text-align: right;">${amountStr}</td>
      <td data-label="Status" style="text-align: center;">${badge}</td>
    `;
    return tr;
  }

  document.addEventListener("DOMContentLoaded", function () {
    const link = document.getElementById("link-investment");
    if (link) link.href = "investment";

    auth.onAuthStateChanged(user => {
      if (user && user.email) {
        statusMsg.textContent = 'Loading your investments...';

        db.collection('investments')
          .where('email', '==', user.email)
          .onSnapshot(snapshot => {
            clearTable();

            if (snapshot.empty) {
              noDataRow.style.display = 'flex';
              statusMsg.textContent = 'No investments found for your account.';
              return;
            }

            statusMsg.textContent = 'Below are your investment records.';

            snapshot.docs
              .map(doc => doc.data())
              .sort((a, b) => (b.timestamp?.seconds || 0) - (a.timestamp?.seconds || 0))
              .forEach(investment => {
                const row = renderInvestment(investment);
                tableBody.appendChild(row);
              });
          }, err => {
            console.error("Error loading investments:", err);
            statusMsg.textContent = 'Failed to load investments.';
            noDataRow.style.display = 'flex';
          });
      } else {
        statusMsg.textContent = 'Please sign in to view your investments.';
        noDataRow.style.display = 'flex';
      }
    });
  });
</script>
<!-- Logout Confirmation Modal -->
<div id="logout-modal" style="display:none; position:fixed; inset:0; background:rgba(0,0,0,0.5); z-index:1000; justify-content:center; align-items:center;">
  <div style="background:white; padding:2rem; border-radius:10px; text-align:center; box-shadow:0 4px 12px rgba(0,0,0,0.2);">
    <p style="margin-bottom:1rem;">Are you sure you want to log out?</p>
    <button id="confirm-logout" style="margin-right:1rem;">Yes</button>
    <button id="cancel-logout">Cancel</button>
  </div>
</div>

<!-- Logout Loading Animation -->
<div id="logout-loader" style="display:none; position:fixed; inset:0; background:rgba(255,255,255,0.8); z-index:1001; justify-content:center; align-items:center;">
  <div class="loader" style="border:4px solid #ccc; border-top:4px solid #2e4aad; border-radius:50%; width:40px; height:40px; animation:spin 1s linear infinite;"></div>
</div>

<!-- Loader Spinner Animation -->
<style>
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const logoutBtn = document.getElementById("logout-btn");
    const logoutModal = document.getElementById("logout-modal");
    const confirmBtn = document.getElementById("confirm-logout");
    const cancelBtn = document.getElementById("cancel-logout");
    const loadingEl = document.getElementById("logout-loading");

    logoutBtn.addEventListener("click", () => {
      logoutModal.style.display = "flex"; // Show confirmation modal
    });

    cancelBtn.addEventListener("click", () => {
      logoutModal.style.display = "none"; // Hide modal on cancel
    });

    confirmBtn.addEventListener("click", () => {
      // Show loading animation and disable buttons
      loadingEl.style.display = "block";
      confirmBtn.disabled = true;
      cancelBtn.disabled = true;

      firebase.auth().signOut()
        .then(() => {
          // Redirect after logout
          window.location.href = "index";
        })
        .catch(err => {
          alert("Logout failed: " + err.message);
          loadingEl.style.display = "none";
          confirmBtn.disabled = false;
          cancelBtn.disabled = false;
        });
    });
  });
</script>
</body>
</html>